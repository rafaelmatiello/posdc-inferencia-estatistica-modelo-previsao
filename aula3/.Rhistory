mpg2 %>%
group_by(manufacturer, year) %>%
summarise(
media_cidade = mean(city_miles_per_gallon),
media_via = mean(highway_miles_per_gallon)
) %>%
view()
mpg2 %>%
group_by(manufacturer, year) %>%
summarise(
media_cidade = mean(city_miles_per_gallon),
media_via = mean(highway_miles_per_gallon)
) %>%
mutate(
diff_media = media_via - media_cidade
) %>%
arrange(diff_media) %>%
view()
?arrange
mpg2 %>%
group_by(manufacturer, year) %>%
summarise(
media_cidade = mean(city_miles_per_gallon),
media_via = mean(highway_miles_per_gallon)
) %>%
mutate(
diff_media = media_via - media_cidade
) %>%
arrange(-diff_media) %>%
view()
mpg2 %>%
group_by(manufacturer, year) %>%
summarise(
media_cidade = mean(city_miles_per_gallon),
media_via = mean(highway_miles_per_gallon)
) %>%
mutate(
diff_media = media_via - media_cidade
) %>%
arrange(-diff_media) %>%
filter(media_cidade > 20) %>%
view()
mpg2 %>%
group_by(manufacturer, year) %>%
summarise(
media_cidade = mean(city_miles_per_gallon),
media_via = mean(highway_miles_per_gallon)
) %>%
mutate(
diff_media = media_via - media_cidade
) %>%
arrange(-diff_media) %>%
filter(media_cidade > 20,
media_cidade < 24 ) %>%
view()
mpg2 %>%
# + adicionar um nova camada
ggplot(aes(x = manufacturer)) +
geom_bar()
mpg2 %>%
# + adicionar um nova camada, só funciona para o plot
ggplot(aes(x = manufacturer)) +
geom_bar() +
coord_flip()
mpg2 %>%
group_by(manufacturer) %>%
summarise(
media_cidade = mean(city_miles_per_gallon)
) %>%
ggplot(
aes(x= manufacturer,
y = media_cidade)
) +
geom_bar()
mpg2 %>%
group_by(manufacturer) %>%
summarise(
media_cidade = mean(city_miles_per_gallon)
) %>%
ggplot(
aes(x = manufacturer,
y = media_cidade)
) +
##geom_bar conta a frequencia
geom_bar( stat = "identity" )
?geom_bar
mpg2 %>%
group_by(manufacturer) %>%
summarise(
media_cidade = mean(city_miles_per_gallon)
) %>%
ggplot(
#mapeamento de coluna para uma propriedade
aes(x = manufacturer,
y = media_cidade)
) +
##geom_bar conta a frequencia
geom_bar( stat = "identity" )
mpg2 %>%
group_by(manufacturer) %>%
summarise(
media_cidade = mean(city_miles_per_gallon)
) %>%
ggplot(
#mapeamento de coluna para uma propriedade
aes(x = manufacturer,
y = media_cidade)
) +
##geom_bar conta a frequencia
geom_bar( stat = "bin" )
mpg2 %>%
group_by(manufacturer) %>%
summarise(
media_cidade = mean(city_miles_per_gallon)
) %>%
ggplot(
#mapeamento de coluna para uma propriedade
aes(x = manufacturer,
y = media_cidade)
) +
##geom_bar conta a frequencia
geom_bar( stat = "bin" )
mpg2 %>%
group_by(manufacturer) %>%
summarise(
media_cidade = mean(city_miles_per_gallon)
) %>%
ggplot(
#mapeamento de coluna para uma propriedade
aes(x = manufacturer,
y = media_cidade)
) +
##geom_bar conta a frequencia
geom_bar( stat = "identity" )
# gráfico de barras da contagem de ocorrência de cada marca
mpg2 %>%
# + adicionar um nova camada, só funciona para o plot
ggplot(aes(x = manufacturer)) +
geom_bar( stat = "bin") +
#inverter para horizontal
coord_flip()
mpg2 %>%
group_by(manufacturer) %>%
summarise(
media_cidade = mean(city_miles_per_gallon)
) %>%
ggplot(
#mapeamento de coluna para uma propriedade
aes(x = manufacturer,
y = media_cidade)
) +
##geom_bar conta a frequencia, porque por padrão valor é count
#indentity -> utiliza o x e o y para renderizar o gráfico
geom_bar( stat = "identity" )
mpg2 %>%
group_by(manufacturer) %>%
summarise(
media_cidade = mean(city_miles_per_gallon)
) %>%
ggplot(
#mapeamento de coluna para uma propriedade
aes(x = manufacturer,
y = media_cidade)
) +
##geom_bar conta a frequencia, porque por padrão valor é count
#indentity -> utiliza o x e o y para renderizar o gráfico
geom_bar( stat = "identity" ) +
labs(
x = "Fabricante",
y = "Média na cidade",
title = "Consumo médio na cidade por fabricante"
)
colnames(mpg2)
mpg2 %>%
count(drv)
mpg2 <- mutate(mpg,
manufacturer=manufacturer,
model = model,
displacement= displ,
year=year,
number_of_cylinders = cyl,
transmission=trans,
drive=drv,
city_miles_per_gallon= cty,
highway_miles_per_gallon=hwy,
fuel_type=fl,
class=class
)
mpg2 %>%
count(drive)
mpg2 %>%
ggplot(aes(drive))
mpg2 %>%
filter(drive == "4") %>%
ggplot(aes(city_miles_per_gallon)) %>%
geom_histogram(bins=30)
mpg2 %>%
filter(drive == "4") %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30, colors('r','g','b'))
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30, colors = ['r','g','b'])
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30, colors = ['r','g','b'])
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30, colors = ('r','g','b'))
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30, colors = 'red')
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors =drive)) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors='r')) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors='red')) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors='blue')) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30)
?geom_histogram
?ggplot
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_bar(x = manufacturer,
y = media_cidade)+
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_bar(x = drive,
y = city_miles_per_gallon)+
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )%>%
view()
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x=drive)) +
geom_bar( )
mpg2 %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30)
mpg2 %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, fill = drive)) +
geom_histogram(bins = 30)
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30)+
facet_wrap(~drive)
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30, fill=drive)+
facet_wrap(~drive)
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30)+
facet_wrap(~drive)
?facet_wrap
#imprimindo 3 gráficos para comparação
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_wrap(~drive)
#imprimindo 3 gráficos para comparação, gráfico,
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_grid(full_type ~drive)
#imprimindo 3 gráficos para comparação, gráfico,
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_grid(full_type ~ drive)
#imprimindo 3 gráficos para comparação, gráfico,
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_grid(fuel_type ~ drive)
mpg2 <- mutate(mpg,
manufacturer=manufacturer,
model = model,
engine_displacement= displ,
year=year,
number_of_cylinders = cyl,
transmission=trans,
drive=drv,
city_miles_per_gallon= cty,
highway_miles_per_gallon=hwy,
fuel_type=fl,
class=class
)
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(alpha = 0.1)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(alpha = 0.1) +
geom_smooth(se = FALSE)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(aes(color=drive) alpha = 0.1) +
#linha de tendencia
geom_smooth(se = FALSE)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(aes(color=drive), alpha = 0.1) +
#linha de tendencia
geom_smooth(se = FALSE)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(aes(color=drive), alpha = 0.5) +
#linha de tendencia
geom_smooth(se = FALSE)+
facet_wrap(~drive)
modelo$coefficients
modelo <- lm(
city_miles_per_gallon ~ engine_displacement,
mpg2
)
modelo$coefficients
library(modelr)
mpg2 <- mpg2 %>%
add_predictions(modelo)
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + year,
mpg2
)
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + year,
mpg2
)
modelo$coefficients
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = year), color="green")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + number_of_cylinders,
mpg2
)
modelo$coefficients
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = number_of_cylinders), color="green")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + number_of_cylinders,
mpg2
)
mpg2 <- mpg2 %>%
add_predictions(modelo)
modelo$coefficients
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = number_of_cylinders), color="green")+
geom_point(aes(y = pred), color="blue")
view(mpg2)
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")+
facet_wrap(~number_of_cylinders)
view(mpg2)
modelo$coefficients
mpg2 <- mpg2 %>%
add_residuals(modelo)
mpgg2$resid
mpg2$resid
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_point()
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_point(aes(colors = drive))
mpg2 %>%
ggplot(aes(city_miles_per_gallon, resid)) +
geom_point(aes(colors = drive))
mpg2 %>%
ggplot(aes(city_miles_per_gallon, resid)) +
geom_point(aes(color = drive))
install.packages(c("backports", "BH", "broom", "callr", "cli", "DBI", "dbplyr", "digest", "dplyr", "ellipsis", "fansi", "farver", "forcats", "fs", "ggplot2", "glue", "gss", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "mime", "modelr", "nloptr", "openssl", "pillar", "pkgload", "plyr", "prettyunits", "processx", "ps", "purrr", "Rcpp", "reshape2", "rlang", "rmarkdown", "rstudioapi", "scales", "stringi", "tibble", "tidyr", "tidyselect", "tinytex", "vctrs", "withr", "xfun", "xml2", "yaml"))
install.packages(c("boot", "class", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "spatial", "survival"), lib="C:/Program Files/R/R-3.6.1/library")
install.packages(c("backports", "BH", "broom", "callr", "cli", "DBI", "dbplyr", "digest", "dplyr", "ellipsis", "fansi", "farver", "forcats", "fs", "ggplot2", "glue", "gss", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "mime", "modelr", "nloptr", "openssl", "pillar", "pkgload", "plyr", "prettyunits", "processx", "ps", "purrr", "Rcpp", "reshape2", "rlang", "rmarkdown", "rstudioapi", "scales", "stringi", "tibble", "tidyr", "tidyselect", "tinytex", "vctrs", "withr", "xfun", "xml2", "yaml"))
install.packages("yaml")
cor.test(peso$Estatura, peso$Peso, method = "spearman")
setwd('C:\\repositorios\\posdc-inferencia-estatistica-modelo-previsao\\aula3')
peso <- read.csv("peso_altura.csv", header=T, sep=";", dec = ",")
cor.test(peso$Estatura, peso$Peso, method = "pearson")
cor.test(peso$Estatura, peso$Peso, method = "spearman")
cor.test(peso$Estatura, peso$Peso, method = "kendall")
cor.test(peso$Estatura, peso$Peso, method = "kendall")
lm(peso$Peso ~ peso$Estatura)
modelo <- lm(peso$Peso ~ peso$Estatura)
summary(modelo)
idoso <- read.csv("Exemplo_Reg_Mult.csv", header=T, sep=";", dec = ",")
View(idoso)
cor.test(idoso$KBI, idoso$ADL, method = "person")
cor.test(idoso$KBI, idoso$ADL, method = "pearson")
cor.test(idoso$KBI, idoso$MEM, method = "pearson")
cor.test(idoso$KBI, idoso$COG, method = "pearson")
cor.test(idoso$ADL, idoso$MEM, method = "pearson")
cor.test(idoso$ADL, idoso$MEM, method = "pearson")
cor.test(idoso$ADL, idoso$COG, method = "pearson")
cor.test(idoso$MEM, idoso$COG, method = "pearson")
# variável independente KBI
idoso_mod <- lm(idoso$KBI, idoso$ADL+idoso$MEM+idoso$COG)
# variável independente KBI
idoso_mod <- lm(idoso$KBI, idoso$ADL+idoso$MEM+idoso$COG)
# variável independente KBI
idoso_mod <- lm(idoso$KBI ~ idoso$ADL+idoso$MEM+idoso$COG)
summary(idoso_mod)
