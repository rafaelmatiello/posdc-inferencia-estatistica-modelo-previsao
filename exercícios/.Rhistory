media_cidade = mean(city_miles_per_gallon)
) %>%
ggplot(
#mapeamento de coluna para uma propriedade
aes(x = manufacturer,
y = media_cidade)
) +
##geom_bar conta a frequencia, porque por padrão valor é count
#indentity -> utiliza o x e o y para renderizar o gráfico
geom_bar( stat = "identity" )
mpg2 %>%
group_by(manufacturer) %>%
summarise(
media_cidade = mean(city_miles_per_gallon)
) %>%
ggplot(
#mapeamento de coluna para uma propriedade
aes(x = manufacturer,
y = media_cidade)
) +
##geom_bar conta a frequencia, porque por padrão valor é count
#indentity -> utiliza o x e o y para renderizar o gráfico
geom_bar( stat = "identity" ) +
labs(
x = "Fabricante",
y = "Média na cidade",
title = "Consumo médio na cidade por fabricante"
)
colnames(mpg2)
mpg2 %>%
count(drv)
mpg2 <- mutate(mpg,
manufacturer=manufacturer,
model = model,
displacement= displ,
year=year,
number_of_cylinders = cyl,
transmission=trans,
drive=drv,
city_miles_per_gallon= cty,
highway_miles_per_gallon=hwy,
fuel_type=fl,
class=class
)
mpg2 %>%
count(drive)
mpg2 %>%
ggplot(aes(drive))
mpg2 %>%
filter(drive == "4") %>%
ggplot(aes(city_miles_per_gallon)) %>%
geom_histogram(bins=30)
mpg2 %>%
filter(drive == "4") %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30, colors('r','g','b'))
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30, colors = ['r','g','b'])
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30, colors = ['r','g','b'])
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30, colors = ('r','g','b'))
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30, colors = 'red')
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors =drive)) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors='r')) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors='red')) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors='blue')) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30)
?geom_histogram
?ggplot
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_bar(x = manufacturer,
y = media_cidade)+
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_bar(x = drive,
y = city_miles_per_gallon)+
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )%>%
view()
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x=drive)) +
geom_bar( )
mpg2 %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30)
mpg2 %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, fill = drive)) +
geom_histogram(bins = 30)
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30)+
facet_wrap(~drive)
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30, fill=drive)+
facet_wrap(~drive)
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30)+
facet_wrap(~drive)
?facet_wrap
#imprimindo 3 gráficos para comparação
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_wrap(~drive)
#imprimindo 3 gráficos para comparação, gráfico,
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_grid(full_type ~drive)
#imprimindo 3 gráficos para comparação, gráfico,
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_grid(full_type ~ drive)
#imprimindo 3 gráficos para comparação, gráfico,
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_grid(fuel_type ~ drive)
mpg2 <- mutate(mpg,
manufacturer=manufacturer,
model = model,
engine_displacement= displ,
year=year,
number_of_cylinders = cyl,
transmission=trans,
drive=drv,
city_miles_per_gallon= cty,
highway_miles_per_gallon=hwy,
fuel_type=fl,
class=class
)
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(alpha = 0.1)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(alpha = 0.1) +
geom_smooth(se = FALSE)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(aes(color=drive) alpha = 0.1) +
#linha de tendencia
geom_smooth(se = FALSE)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(aes(color=drive), alpha = 0.1) +
#linha de tendencia
geom_smooth(se = FALSE)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(aes(color=drive), alpha = 0.5) +
#linha de tendencia
geom_smooth(se = FALSE)+
facet_wrap(~drive)
modelo$coefficients
modelo <- lm(
city_miles_per_gallon ~ engine_displacement,
mpg2
)
modelo$coefficients
library(modelr)
mpg2 <- mpg2 %>%
add_predictions(modelo)
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + year,
mpg2
)
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + year,
mpg2
)
modelo$coefficients
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = year), color="green")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + number_of_cylinders,
mpg2
)
modelo$coefficients
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = number_of_cylinders), color="green")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + number_of_cylinders,
mpg2
)
mpg2 <- mpg2 %>%
add_predictions(modelo)
modelo$coefficients
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = number_of_cylinders), color="green")+
geom_point(aes(y = pred), color="blue")
view(mpg2)
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")+
facet_wrap(~number_of_cylinders)
view(mpg2)
modelo$coefficients
mpg2 <- mpg2 %>%
add_residuals(modelo)
mpgg2$resid
mpg2$resid
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_point()
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_point(aes(colors = drive))
mpg2 %>%
ggplot(aes(city_miles_per_gallon, resid)) +
geom_point(aes(colors = drive))
mpg2 %>%
ggplot(aes(city_miles_per_gallon, resid)) +
geom_point(aes(color = drive))
setwd('C:/repositorios/posdc-inferencia-estatistica-modelo-previsao/aula2/exercicios')
dados1 <- read.csv("Dados Exemplos Teste t uma amostra.csv", header=T, sep=";", dec = ".")
summary(dados1$horas.Semanais)
sd(dados1$horas.Semanais)
skewness(dados1$horas.Semanais)
library(fBasics)
skewness(dados1$horas.Semanais)
kurtosis(dados1$horas.Semanais)
library(normtest)
shapiro.test(dados1$horas.Semanais)
t.test(dados1$horas.Semanais, mu=44)
setwd('C:\\repositorios\\posdc-inferencia-estatistica-modelo-previsao\\exercícios')
dados1 <- read.csv("Avaliacao Formacao.csv", header=T, sep=";", dec = ".")
dados1 <- read.csv("Avaliacao Formacao.csv", header=T, sep=";", dec = ".")
View(dados1)
View(dados1)
summary(dados1$Conhecimento_Antes)
sd(dados1$Conhecimento_Antes)
source('C:/repositorios/posdc-inferencia-estatistica-modelo-previsao/exercícios/exercicio.R', encoding = 'UTF-8', echo=TRUE)
summary(dados1$Conhecimento_Antes)
sd(dados1$Conhecimento_Antes)
sd(dados1$Conhecimento_Antes) /mean(dados1$Conhecimento_Antes)
summary(dados1$Conhecimento_Depois)
sd(dados1$Conhecimento_Depois)
sd(dados1$Conhecimento_Depois) /mean(dados1$Conhecimento_Depois)
skewness(dados1$Conhecimento_Antes)
skewness(dados1$Conhecimento_Depois)
kurtosis(dados1$Conhecimento_Antes)
kurtosis(dados1$Conhecimento_Depois)
shapiro.test(dados1$Conhecimento_Antes)
shapiro.test(dados1$Conhecimento_Depois)
dif <- dados1$Conhecimento_Depois-dados1$Conhecimento_Antes
shapiro.test(diff)
shapiro.test(diff)
dif <- dados1$Conhecimento_Depois - dados1$Conhecimento_Antes
shapiro.test(dados1$Conhecimento_Antes)
shapiro.test(dados1$Conhecimento_Antes)
shapiro.test(dados1$Conhecimento_Depois)
shapiro.test(diff)
shapiro.test(dif)
library(normtest)
shapiro.test(dados1$Conhecimento_Antes)
hist(dif)
# teste de amostras pareadas
# elementos pareados paired = T
# H0 -> a média é igual a media depois.
# H1 -> a media antes NÃO é igual a media depois
t.test(dados1$Conhecimento_Antes, dados1$Conhecimento_Depois, paired = T) # teste Bi-caudal
# teste unicaudal,
# h0 -> a média antes é igual a media depois
# h1 -> a media antes é maior que media depois
# unicaudal o peso antes ser maior que o peso depois
t.test(dados1$Conhecimento_Antes, dados1$Conhecimento_Depois, alternative = "greater", paired = T)
# teste unicaudal,
# h0 -> a média antes é menor que média depois
# h1 -> a media antes é maior que media depois
# unicaudal o peso antes ser maior que o peso depois
t.test(dados1$Conhecimento_Antes, dados1$Conhecimento_Depois, alternative = "less", paired = T)
# teste unicaudal,
# h0 -> a média antes é igual a media depois
# h1 -> a media antes é maior que media depois
# unicaudal o peso antes ser maior que o peso depois
t.test(dados1$Conhecimento_Antes, dados1$Conhecimento_Depois, alternative = "greater", paired = T)
# teste unicaudal,
# h0 -> a média antes é igual a media depois
# h1 -> a media antes é maior que media depois
# unicaudal o peso antes ser maior que o peso depois
t.test(dados1$Conhecimento_Antes, dados1$Conhecimento_Depois, alternative = "less", paired = T)
# teste unicaudal,
# h0 -> a média antes é igual a media depois
# h1 -> a media antes é maior que media depois
# unicaudal o peso antes ser maior que o peso depois
t.test(dados1$Conhecimento_Antes, dados1$Conhecimento_Depois,  paired = T)
alternative = "less"
# teste unicaudal,
# h0 -> a média antes é igual a media depois
# h1 -> a media antes é menor que media depois
# unicaudal o peso antes ser maior que o peso depois
t.test(dados1$Conhecimento_Antes, dados1$Conhecimento_Depois, alternative = "less", paired = T)
dados2 <- read.csv("Clima Organizacional.csv", header=T, sep=";", dec = ".")
View(dados2)
View(dados2)
View(dados2)
summary(dados2$Salario[dados2$sexo == 0])#home
sd(dados2$Salario[dados2$sexo == 0])
sd(dados2$Salario[dados2$sexo == 0]) /mean(dados2$Salario[dados2$sexo == 0])
dados2 <- read.csv("Clima Organizacional.csv", header=T, sep=";", dec = ".")
summary(dados2$Salario[dados2$Sexo == 0])#home
sd(dados2$Salario[dados2$Sexo == 0])
sd(dados2$Salario[dados2$Sexo == 0]) /mean(dados2$Salario[dados2$Sexo == 0])
summary(dados2$Salario[dados2$Sexo == 1])#mulher
sd(dados2$Salario[dados2$Sexo == 1])
sd(dados2$Salario[dados2$Sexo == 1]) /mean(dados2$Salario[dados2$Sexo == 1])
skewness(dados2$Salario[dados2$Sexo == 0])
skewness(dados2$Salario[dados2$Sexo == 1])
source('C:/repositorios/posdc-inferencia-estatistica-modelo-previsao/exercícios/exercicio2.R', encoding = 'UTF-8', echo=TRUE)
kurtosis(dados2$Salario[dados2$Sexo == 0])
kurtosis(dados2$Salario[dados2$Sexo == 1])
shapiro.test(dados2$Salario[dados2$Sexo == 0])
shapiro.test(dados2$Salario[dados2$Sexo == 1])#mulher
hist(dados2$Salario[dados2$Sexo == 0])
hist(dados2$Salario[dados2$Sexo == 1])
library(car)
leveneTest(dados2$Salario, dados2$Sexo)
plot(dados2$Salario, dados2$Sexo, xlab="Salário", ylab="Sexo")
abline(h=c(0,1), v=c(mean(dados2$Salario[dados3$Sexo == 0]), dados2$Salario[dados2$Sexo == 1]), col="red")
plot(dados2$Salario, dados2$Sexo, xlab="Salário", ylab="Sexo")
abline(h=c(0,1), v=c(mean(dados2$Salario[dados2$Sexo == 0]), dados2$Salario[dados2$Sexo == 1]), col="red")
plot(dados2$Salario, dados2$Sexo, xlab="Salário", ylab="Sexo")
abline(h=c(0,1), v=c(mean(dados2$Salario[dados2$Sexo == 0]), dados2$Salario[dados2$Sexo == 1]), col="red")
abline(h=c(0,1), v=c(mean(dados2$Salario[dados2$Sexo == 0])), col="red")
plot(dados2$Salario, dados2$Sexo, xlab="Salário", ylab="Sexo")
abline(h=c(0,1), v=c(mean(dados2$Salario[dados2$Sexo == 0])), col="red")
abline(h=c(0,1), v=c(mean(dados2$Salario[dados2$Sexo == 1])), col="blue")
leveneTest(dados2$Salario, dados2$Sexo)
t.test(dados2$Salario ~ dados2$Sexo, var.equals=T)
# teste t amostra idependente - inicaldal
#H0 -> média salárial das mulheres é menor ou igual a dos homen
#H0 -> média salárial das mulheres NÃO émenor a dos homen
t.test(dados2$Salario ~ dados2$Sexo, alternative="greater")
setwd('C:\\repositorios\\posdc-inferencia-estatistica-modelo-previsao\\exercícios')
# carregar o database
dados <- read.csv("Preco Comida.csv", header=T, sep=";", dec = ".")
View(dados)
# estatísticas descritivas
summary(dados$Preco_Kg)
# carregar o database
dados <- read.csv("Preco Comida.csv", header=T, sep=";", dec = ",")
# estatísticas descritivas
summary(dados$Preco_Kg)
summary(dados$Preco_Kg[dados$Comida ==1]) # grupo 1
summary(dados$Preco_Kg[dados$Comida ==2]) # grupo 2
summary(dados$Preco_Kg[dados$Comida ==3]) # grupo 3
sd(dados$Preco_Kg)
sd(dados$Preco_Kg)
sd(dados$Preco_Kg[dados$Comida ==1]) # grupo 1
sd(dados$Preco_Kg[dados$Comida ==2]) # grupo 2
sd(dados$Preco_Kg[dados$Comida ==3]) # grupo 3
sd(dados$Preco_Kg) /mean(dados$Preco_Kg)
sd(dados$Preco_Kg[dados$Comida ==1]) / mean(dados$Preco_Kg[dados$Comida ==1]) # grupo 1
sd(dados$Preco_Kg[dados$Comida ==2]) / mean(dados$Preco_Kg[dados$Comida ==2]) # grupo 2
sd(dados$Preco_Kg[dados$Comida ==3]) / mean(dados$Preco_Kg[dados$Comida ==3]) # grupo 3
skewness(dados$Preco_Kg)
skewness(dados$Preco_Kg[dados$Comida ==1]) # grupo 1
skewness(dados$Preco_Kg[dados$Comida ==2]) # grupo 2
skewness(dados$Preco_Kg[dados$Comida ==3]) # grupo 3
kurtosis(dados$Preco_Kg)
kurtosis(dados$Preco_Kg[dados$Comida ==1]) # grupo 1
kurtosis(dados$Preco_Kg[dados$Comida ==2]) # grupo 2
kurtosis(dados$Preco_Kg[dados$Comida ==3]) # grupo 3
shapiro.test(dados$Preco_Kg)
shapiro.test(dados$Preco_Kg[dados$Comida ==1]) # grupo 1
shapiro.test(dados$Preco_Kg[dados$Comida ==2]) # grupo 2
shapiro.test(dados$Preco_Kg[dados$Comida ==3]) # grupo 3
# teste de levene,
# h0 -> os grupos possuen a mesma variância entre si
# h2 -> os grupos possuen variâncias distintas.
leveneTest(dados$Preco_Kg, dados$Comida)
plot(dados$Preco_Kg,  dados$Comida, xlab="Preço", ylab="Comida")
abline(v=mean(dados$Preco_Kg[dados$Comida == 1]), col="red")
abline(v=mean(dados$Preco_Kg[dados$Comida == 2]), col="green")
abline(v=mean(dados$Preco_Kg[dados$Comida == 3]), col="blue")
# teste ANOVA
# h0 -> os grupos possem médias iguais
#h1 -> extem 2 grupos com média distintas
ANOVA <- aov(dados$Preco_Kg ~dados$Comida)
View(ANOVA)
View(ANOVA)
summary(ANOVA)
t.test(dados$Preco_Kg[dados$Comida != 3] ~dados$Preco_Kg[dados$Comida != 3]) # 1 e 2
t.test(dados$Preco_Kg[dados$Comida != 2] ~dados$Preco_Kg[dados$Comida != 2]) # 1 e 3
t.test(dados$Preco_Kg[dados$Comida != 1] ~dados$Preco_Kg[dados$Comida != 1]) # 2 e 3
t.test(dados$Preco_Kg[dados$Comida != 3] ~ dados$Preco_Kg[dados$Comida != 3])
#Testes 2 a 2
t.test(dados$Preco_Kg[dados$Comida != 3] ~ dados$Preco_Kg[dados$Comida != 3]) # 1 e 2
