group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30, colors = 'red')
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors =drive)) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors='r')) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors='red')) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, colors='blue')) +
geom_histogram(bins=30)
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins=30)
?geom_histogram
?ggplot
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_bar(x = manufacturer,
y = media_cidade)+
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_bar(x = drive,
y = city_miles_per_gallon)+
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )%>%
view()
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x = drive,
y = city_miles_per_gallon)) +
geom_bar( stat = "identity" )
geom_bar( stat = "identity" )
mpg2 %>%
##filter(drive == "4") %>%
group_by(drive, city_miles_per_gallon) %>%
ggplot(aes(x=drive)) +
geom_bar( )
mpg2 %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30)
mpg2 %>%
group_by(drive) %>%
ggplot(aes(city_miles_per_gallon, fill = drive)) +
geom_histogram(bins = 30)
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30)+
facet_wrap(~drive)
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30, fill=drive)+
facet_wrap(~drive)
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_histogram(bins = 30)+
facet_wrap(~drive)
?facet_wrap
#imprimindo 3 gráficos para comparação
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_wrap(~drive)
#imprimindo 3 gráficos para comparação, gráfico,
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_grid(full_type ~drive)
#imprimindo 3 gráficos para comparação, gráfico,
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_grid(full_type ~ drive)
#imprimindo 3 gráficos para comparação, gráfico,
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_density(bins = 30)+
#um gráfico por tipo
facet_grid(fuel_type ~ drive)
mpg2 <- mutate(mpg,
manufacturer=manufacturer,
model = model,
engine_displacement= displ,
year=year,
number_of_cylinders = cyl,
transmission=trans,
drive=drv,
city_miles_per_gallon= cty,
highway_miles_per_gallon=hwy,
fuel_type=fl,
class=class
)
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(alpha = 0.1)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(alpha = 0.1) +
geom_smooth(se = FALSE)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(aes(color=drive) alpha = 0.1) +
#linha de tendencia
geom_smooth(se = FALSE)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(aes(color=drive), alpha = 0.1) +
#linha de tendencia
geom_smooth(se = FALSE)
#gráfico de pontos, alfa para identificar aonde mais acontecem os pontos, mais escuro
mpg2 %>%
ggplot(aes(engine_displacement, city_miles_per_gallon)) +
geom_point(aes(color=drive), alpha = 0.5) +
#linha de tendencia
geom_smooth(se = FALSE)+
facet_wrap(~drive)
modelo$coefficients
modelo <- lm(
city_miles_per_gallon ~ engine_displacement,
mpg2
)
modelo$coefficients
library(modelr)
mpg2 <- mpg2 %>%
add_predictions(modelo)
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + year,
mpg2
)
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + year,
mpg2
)
modelo$coefficients
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = year), color="green")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + number_of_cylinders,
mpg2
)
modelo$coefficients
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = number_of_cylinders), color="green")+
geom_point(aes(y = pred), color="blue")
modelo <- lm(
city_miles_per_gallon ~ engine_displacement + number_of_cylinders,
mpg2
)
mpg2 <- mpg2 %>%
add_predictions(modelo)
modelo$coefficients
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = number_of_cylinders), color="green")+
geom_point(aes(y = pred), color="blue")
view(mpg2)
mpg2 %>%
ggplot(aes(engine_displacement)) +
geom_point(aes(y = city_miles_per_gallon), color="red")+
geom_point(aes(y = pred), color="blue")+
facet_wrap(~number_of_cylinders)
view(mpg2)
modelo$coefficients
mpg2 <- mpg2 %>%
add_residuals(modelo)
mpgg2$resid
mpg2$resid
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_point()
mpg2 %>%
ggplot(aes(city_miles_per_gallon)) +
geom_point(aes(colors = drive))
mpg2 %>%
ggplot(aes(city_miles_per_gallon, resid)) +
geom_point(aes(colors = drive))
mpg2 %>%
ggplot(aes(city_miles_per_gallon, resid)) +
geom_point(aes(color = drive))
install.packages(c("backports", "BH", "broom", "callr", "cli", "DBI", "dbplyr", "digest", "dplyr", "ellipsis", "fansi", "farver", "forcats", "fs", "ggplot2", "glue", "gss", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "mime", "modelr", "nloptr", "openssl", "pillar", "pkgload", "plyr", "prettyunits", "processx", "ps", "purrr", "Rcpp", "reshape2", "rlang", "rmarkdown", "rstudioapi", "scales", "stringi", "tibble", "tidyr", "tidyselect", "tinytex", "vctrs", "withr", "xfun", "xml2", "yaml"))
install.packages(c("boot", "class", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "spatial", "survival"), lib="C:/Program Files/R/R-3.6.1/library")
install.packages(c("backports", "BH", "broom", "callr", "cli", "DBI", "dbplyr", "digest", "dplyr", "ellipsis", "fansi", "farver", "forcats", "fs", "ggplot2", "glue", "gss", "haven", "hms", "htmltools", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "mime", "modelr", "nloptr", "openssl", "pillar", "pkgbuild", "pkgload", "plyr", "prettyunits", "processx", "ps", "purrr", "quantreg", "Rcpp", "reshape2", "rlang", "rmarkdown", "rstudioapi", "scales", "stringi", "tibble", "tidyr", "tidyselect", "tinytex", "vctrs", "withr", "xfun", "xml2", "yaml"))
setwd('C:\\repositorios\\posdc-inferencia-estatistica-modelo-previsao\\avaliação final');
dados <- read.csv("Dados.csv", header=T, sep=";", dec = ",")
dados <- read.csv("Dados.csv", header=T, sep=";", dec = ",")
View(dados)
View(dados)
summary(dados$salario[dados$sexo == 0])
summary(dados$salario[dados$sexo == 1]) #mulher
summary(dados$salario) #Geral
summary(dados$salario[dados$sexo == 0]) #home
summary(dados$salario[dados$sexo == 1]) #mulher
plot(cars)
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
setwd('C:\\repositorios\\posdc-inferencia-estatistica-modelo-previsao\\avaliação final');
library(fBasics)
library(car)
library(normtest)
dados <- read.csv("Dados.csv", header=T, sep=";", dec = ",")
setwd('C:\\repositorios\\posdc-inferencia-estatistica-modelo-previsao\\avaliação final');
library(fBasics)
library(car)
library(normtest)
dados <- read.csv("Dados.csv", header=T, sep=";", dec = ",")
summary(dados$salario) #Geral
summary(dados$salario[dados$sexo == 0]) #home
summary(dados$salario[dados$sexo == 1]) #mulher
setwd('C:\\repositorios\\posdc-inferencia-estatistica-modelo-previsao\\avaliação final');
library(fBasics)
library(car)
library(normtest)
dados <- read.csv("Dados.csv", header=T, sep=";", dec = ",")
summary(dados$salario) #Geral
summary(dados$salario[dados$sexo == 0]) #home
summary(dados$salario[dados$sexo == 1]) #mulher
summary(dados$salario[dados$sexo == 0]) #home
summary(dados$salario[dados$sexo == 1]) #mulher
summary(dados$salario[dados$sexo == 1]) #mulher
summary(dados$salario[dados$sexo == 1]) #mulher
setwd('C:\\repositorios\\posdc-inferencia-estatistica-modelo-previsao\\avaliação final');
library(fBasics)
library(car)
library(normtest)
dados <- read.csv("Dados.csv", header=T, sep=";", dec = ",")
summary(dados$salario) #Geral
summary(dados$salario[dados$sexo == 0]) #home
summary(dados$salario[dados$sexo == 1]) #mulher
summary(dados$salario[dados$sexo == 0]) #home
summary(dados$salario[dados$sexo == 1]) #mulher
summary(dados$salario[dados$sexo == 0]) #home
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
dados <- read.csv("Dados.csv", header=T, sep=";", dec = ",")
basicStats(dados$salario) #Geral
basicStats(dados$salario[dados$sexo == 0]) #home
basicStats(dados$salario[dados$sexo == 1]) #mulher
shapiro.test(dados$salario[dados$sexo == 0]) #home
shapiro.test(dados$salario[dados$sexo == 1]) #mulher
leveneTest(dados$salario, dados$sexo)
plot(dados$salario, dados$sexo, xlab="Salário", ylab="Sexo")
abline(h=c(0,1), v=c(mean(dados$salario[dados$Sexo == 0])), col="red")
abline(h=c(0,1), v=c(mean(dados$salario[dados$Sexo == 1])), col="blue")
abline(h=c(0,1), h=c(mean(dados$salario[dados$Sexo == 0])), col="red")
plot(dados$salario, dados$sexo, xlab="Salário", ylab="Sexo")
abline(h=c(0,1), h=c(mean(dados$salario[dados$Sexo == 0])), col="red")
plot(dados$salario, dados$sexo, xlab="Salário", ylab="Sexo")
abline(v=c(0,1), h=c(mean(dados$salario[dados$Sexo == 0])), col="red")
abline(v=c(0,1), h=c(mean(dados$salario[dados$Sexo == 1])), col="blue")
abline(h=c(mean(dados$salario[dados$Sexo == 1])), col="blue")
plot(dados$salario, dados$sexo, xlab="Salário", ylab="Sexo")
abline(h=c(mean(dados$salario[dados$Sexo == 0])), col="red")
abline(h=c(mean(dados$salario[dados$Sexo == 1])), col="blue")
plot(dados$salario, dados$sexo, xlab="Salário", ylab="Sexo")
abline(h=c(mean(dados$salario[dados$Sexo == 0])), col="red")
abline(h=c(mean(dados$salario[dados$Sexo == 1])), col="blue")
plot(dados$salario, dados$sexo, xlab="Salário", ylab="Sexo")
abline(h=c(0,1), v=c(mean(dados$salario[dados$Sexo == 0])), col="red")
abline(h=c(0,1), v=c(mean(dados$salario[dados$Sexo == 1])), col="blue")
abline(h=c(0,1), v=c(mean(dados$salario[dados$Sexo == 1])), col="blue")
plot(dados$salario, dados$sexo, xlab="Salário", ylab="Sexo")
abline(h=c(0,1), v=c(mean(dados$salario[dados$Sexo == 1])), col="blue")
plot(dados$salario, dados$sexo, xlab="Salário", ylab="Sexo")
abline(h=c(0,1), v=c(mean(dados$salario[dados$Sexo == 0])), col="red")
plot(dados$salario, dados$sexo, xlab="Salário", ylab="Sexo")
abline(v=mean(dados$salario[dados$sexo == 0]), col="red")
abline(v=mean(dados$salario[dados$sexo == 1]), col="green")
abline(v=mean(dados$salario[dados$sexo == 0]), col="red") #homem
abline(v=mean(dados$salario[dados$sexo == 1]), col="green") #mulher
t.test(dados$salario ~ dados$sexo, var.equals=T)
wilcox.test(dados$salario~dados$sexo)
t.test(dados$salario ~ dados$sexo, alternative="greater")
t.test(dados$salario ~ dados$sexo, alternative="less")
t.test(dados$salario ~ dados$sexo, alternative="l")
t.test(dados$salario ~ dados$sexo, alternative=c("less")
t.test(dados$salario ~ dados$sexo, alternative=c("less")
t.test(dados$salario ~ dados$sexo, alternative=c("less"))
t.test(x=dados$salario[dados$sexo == 0], y=dados$salario[dados$sexo == 1], alternative=c("less"))
t.test(x=dados$salario[dados$sexo == 0], y=dados$salario[dados$sexo == 1], alternative="greater")
t.test(x=dados$salario[dados$sexo == 0], y=dados$salario[dados$sexo == 1], var.equals=T,alternative="greater")
t.test(x=dados$salario[dados$sexo == 0], y=dados$salario[dados$sexo == 1], var.equals=T,alternative="greater")
t.test(x=dados$salario[dados$sexo == 0], y=dados$salario[dados$sexo == 1], var.equals=T,alternative="less")
t.test(x=dados$salario[dados$sexo == 0], mu=mean(dados$salario[dados$sexo == 1]), alternative="less")
t.test(x=dados$salario[dados$sexo == 0], mu=mean(dados$salario[dados$sexo == 1]), alternative="greater")
t.test(dados$salario ~ dados$sexo,  mu=mean(dados$salario), alternative="greater")
t.test(dados$salario ~ dados$sexo, alternative="greater")
summary(dados$salario) #Geral
summary(dados$salario[dados$cor == 0]) #branca
summary(dados$salario[dados$sexo == 1]) #não-branca
summary(dados$salario) #Geral
summary(dados$salario[dados$cor == 0]) #branca
summary(dados$salario[dados$cor == 1]) #não-branca
basicStats(dados$salario) #Geral
basicStats(dados$salario[dados$cor == 0]) #branca
basicStats(dados$salario[dados$cor == 1]) #não-branca
shapiro.test(dados$salario[dados$cor == 0])
shapiro.test(dados$salario[dados$cor == 1])
leveneTest(dados$salario, dados$cor)
t.test(dados$salario ~ dados$cor, var.equals=T)
wilcox.test(dados$salario~dados$cor)
summary(dados$salario) #Geral
summary(dados$salario[dados$est_civil == 0]) #branca
summary(dados$salario[dados$est_civil == 1]) #não-branca
summary(dados$salario) #Geral
summary(dados$salario[dados$est_civil == 0]) #Solteira
summary(dados$salario[dados$est_civil == 1]) #Casada
basicStats(dados$salario) #Geral
basicStats(dados$salario[dados$est_civil == 0]) #Solteira
basicStats(dados$salario[dados$est_civil == 1]) #Casada
shapiro.test(dados$salario[dados$est_civil == 0])
shapiro.test(dados$salario[dados$est_civil == 1])
leveneTest(dados$salario, dados$est_civil)
t.test(dados$salario ~ dados$est_civil, var.equals=T)
wilcox.test(dados$salario~dados$est_civil)
summary(dados$dados[dados$sexo == 1 && dados$est_civil == 1]) # grupo 1
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 8.70   11.28   11.85   11.80   12.43   14.50
summary(dados$dados[dados$sexo == 1 & dados$est_civil == 1]) # grupo 1
summary(dados$dados[dados$sexo == 1 & dados$est_civil == 1]) # grupo 1
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 8.70   11.28   11.85   11.80   12.43   14.50
summary(dados$dados[dados$sexo == 1, dados$est_civil == 1]) # grupo 1
summary(dados$dados[dados$sexo == 1, dados$est_civil == 1]) # grupo 1
summary(dados$dados[dados$sexo == 1 , dados$est_civil == 1]) # grupo 1
install.packages("tidyverse")
summary(dados[dados$sexo == 1 , dados$est_civil == 1]) # grupo 1
summary(dados$salario[dados$sexo == 1 , dados$est_civil == 1]) # grupo 1
summary(dados$salario[dados$sexo == 1 & dados$est_civil == 1]) # grupo 1
summary(dados$salario[dados$sexo == 0 & dados$est_civil == 0]) # grupo 1 - masculino e solteiro
summary(dados$salario[dados$sexo == 0 & dados$est_civil == 1]) # grupo 2 - masculino e casado
summary(dados$salario[dados$sexo == 1 & dados$est_civil == 0]) # grupo 3 - feminino e solteiro
summary(dados$salario[dados$sexo == 1 & dados$est_civil == 1]) # grupo 4 - feminino e casado
shapiro.test(dados$salario[dados$sexo == 0 & dados$est_civil == 0]) # grupo 1 - masculino e solteiro
shapiro.test(dados$salario[dados$sexo == 0 & dados$est_civil == 1]) # grupo 2 - masculino e casado
shapiro.test(dados$salario[dados$sexo == 1 & dados$est_civil == 0]) # grupo 3 - feminino e solteiro
shapiro.test(dados$salario[dados$sexo == 1 & dados$est_civil == 1]) # grupo 4 - feminino e casado
plot(dados$salario, dados4$sexo, xlab="Taxa de hemoglobina", ylab="Grupos tratamento")
plot(dados$salario, dados$sexo, xlab="Taxa de hemoglobina", ylab="Grupos tratamento")
abline(v=mean(dados$salario[dados$sexo == 0 & dados$est_civil == 0]), col="red")
abline(v=mean(dados$salario[dados$sexo == 0 & dados$est_civil == 1]), col="green")
abline(v=mean(dados$salario[dados$sexo == 1 & dados$est_civil == 0]), col="blue")
abline(v=mean(dados$salario[dados$sexo == 1 & dados$est_civil == 1]), col="orange")
plot(dados$salario,  xlab="Taxa de hemoglobina", ylab="Grupos tratamento")
plot(dados$salario,  xlab="Taxa de hemoglobina", ylab="Grupos tratamento")
abline(v=mean(dados$salario[dados$sexo == 0 & dados$est_civil == 0]), col="red")
abline(v=mean(dados$salario[dados$sexo == 0 & dados$est_civil == 1]), col="green")
abline(v=mean(dados$salario[dados$sexo == 1 & dados$est_civil == 0]), col="blue")
abline(v=mean(dados$salario[dados$sexo == 1 & dados$est_civil == 1]), col="orange")
dados$sexo_est_civil <- ifelse(sexo_est_civil == NULL & dados$sexo == 0 & dados$est_civil == 0, "1", NULL)
dados$sexo_est_civil <- c(ifelse(sexo_est_civil == NULL & dados$sexo == 0 & dados$est_civil == 0, "1", NULL))
dados$sexo_est_civil <- c()
dados$sexo_est_civil <- ifelse(sexo_est_civil == NULL & dados$sexo == 0 & dados$est_civil == 0, "1", NULL)
dados$sexo_est_civil <- c()
dados$sexo_est_civil <- c(1, 2)[ dados$sexo == 0 & dados$est_civil == 0 ]
dados$sexo_est_civil <- c("1", "2")[dados$sexo == 0 & dados$est_civil == 0 ]
dados$sexo_est_civil <- c("1")[dados$sexo == 0 & dados$est_civil == 0 ]
sexo_est_civil<-(1:4)
dados<-data.frame(sexo_est_civil)
dados$sexo_est_civil<-data.frame(sexo_est_civil)
dados <- read.csv("Dados.csv", header=T, sep=";", dec = ",")
dados$sexo_est_civil<-data.frame(sexo_est_civil)
dados["sexo_est_civil"]<-NA
for(i in 1:length(dados)){
if(dados$sexo == 0 & dados$est_civil == 0){
dados$sexo_est_civil[i]<- 1
}
else if(dados$sexo == 0 & dados$est_civil == 1){
dados$sexo_est_civil[i]<- 2
}else if(dados$sexo == 1 & dados$est_civil == 0){
dados$sexo_est_civil[i]<- 3
}
else{
dados$sexo_est_civil[i]<- 4
}
}
length(dados)
length(dados$sexo)
for(i in 1:length(dados$sexo)){
if(dados$sexo == 0 & dados$est_civil == 0){
dados$sexo_est_civil[i]<- 1
}
else if(dados$sexo == 0 & dados$est_civil == 1){
dados$sexo_est_civil[i]<- 2
}else if(dados$sexo == 1 & dados$est_civil == 0){
dados$sexo_est_civil[i]<- 3
}
else{
dados$sexo_est_civil[i]<- 4
}
}
for(i in 1:length(dados$sexo)){
if(dados$sexo[i] == 0 & dados$est_civil[i] == 0){
dados$sexo_est_civil[i]<- 1
} else if(dados$sexo == 0 & dados$est_civil[i] == 1){
dados$sexo_est_civil[i]<- 2
} else if(dados$sexo[i] == 1 & dados$est_civil[i] == 0){
dados$sexo_est_civil[i]<- 3
}  else{
dados$sexo_est_civil[i]<- 4
}
}
summary(dados$salario[dados$sexo_est_civil == 1]) # grupo 1 - masculino e solteiro
summary(dados$salario[dados$sexo_est_civil == 2]) # grupo 2 - masculino e casado
summary(dados$salario[dados$sexo_est_civil == 3]) # grupo 3 - feminino e solteiro
summary(dados$salario[dados$sexo_est_civil == 4]) # grupo 4 - feminino e casado
for(i in 1:length(dados$sexo)){
if(dados$sexo[i] == 0 & dados$est_civil[i] == 0){
dados$sexo_est_civil[i] <- 1
} else if(dados$sexo[i] == 0 & dados$est_civil[i] == 1){
dados$sexo_est_civil[i] <- 2
} else if(dados$sexo[i] == 1 & dados$est_civil[i] == 0){
dados$sexo_est_civil[i] <- 3
}  else{
dados$sexo_est_civil[i] <- 4
}
}
summary(dados$salario[dados$sexo_est_civil == 1]) # grupo 1 - masculino e solteiro
summary(dados$salario[dados$sexo_est_civil == 2]) # grupo 2 - masculino e casado
summary(dados$salario[dados$sexo_est_civil == 3]) # grupo 3 - feminino e solteiro
summary(dados$salario[dados$sexo_est_civil == 4]) # grupo 4 - feminino e casado
shapiro.test(dados$salario[dados$sexo_est_civil == 1]) # grupo 1 - masculino e solteiro
shapiro.test(dados$salario[dados$sexo_est_civil == 2]) # grupo 2 - masculino e casado
shapiro.test(dados$salario[dados$sexo_est_civil == 3]) # grupo 3 - feminino e solteiro
shapiro.test(dados$salario[dados$sexo_est_civil == 4]) # grupo 4 - feminino e casado
plot(dados$salario, dados$sexo_est_civil, xlab="Salário", ylab="Grupos")
abline(v=mean(dados$salario[dados$sexo_est_civil == 1]), col="red")
abline(v=mean(dados$salario[dados$sexo_est_civil == 2]), col="green")
abline(v=mean(dados$salario[dados$sexo_est_civil == 3]), col="blue")
abline(v=mean(dados$salario[dados$sexo_est_civil == 4]), col="orange")
leveneTest(dados$salario, dados$sexo_est_civil)
# teste ANOVA
# h0 -> os grupos possem médias iguais
# h1 -> existem 2 grupos com média distintas
ANOVA <- aov(dados$salario ~dados$sexo_est_civil)
summary(ANOVA)
